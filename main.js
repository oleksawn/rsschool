(()=>{"use strict";var e={698:(e,t,o)=>{o.r(t)},99:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.controller=void 0;const n=o(764),a=o(75),r=o(484),s=o(84);t.controller={aboutRoute(){console.log("about route"),document.getElementById("#page").innerHTML=n.view.render(a.templates.about)},formRoute(){console.log("form route"),document.getElementById("#page").innerHTML=n.view.render(a.templates.form);const e=document.querySelectorAll(".logForm .wrapper input");console.log("inputs",e),e.forEach((e=>{console.log("add event listener",e),e.addEventListener("input",r.form.validateInput)})),document.querySelector("#addButton").addEventListener("click",(()=>{if(console.log("router.formRoute() addbutton.onclick"),r.form.validateForm()){const e=r.form.getDataFromForm();s.model.addPlayerintoDb(e)}})),document.querySelector("#cleanButton").addEventListener("click",r.form.cleanForm)},settingsRoute(){console.log("settings route"),document.getElementById("#page").innerHTML=n.view.render(a.templates.settings)},gameRoute(){console.log("game route"),document.getElementById("#page").innerHTML=n.view.render(a.templates.game)},scoresRoute(){console.log("scores route"),s.model.getBestPlayers(10,s.model.settingsObj.difficulty)}}},84:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.model=void 0;const n=o(764),a=o(75);t.model={isLogged:!1,loggedGamer:{},indexedDBOk:()=>"indexedDB"in window,settingsObj:{difficulty:16,theme:"underwater"},db:{},addPlayerintoDb(e){console.log("model.addPlayerIntoDb()"),t.model.addPerson(e)},addPerson(e){const o=t.model.db.transaction(["players"],"readwrite").objectStore("players").add(e);o.onerror=function(e){console.log("Error",e.target.error.name)},o.onsuccess=function(o){console.log("Wow! Did it"),t.model.isLogged=!0,t.model.loggedGamer=e,document.querySelector(".loggedGamer__data").innerHTML=`<p class="name">${e.fname} ${e.lname}</p><p class="email">${e.email}</p>`;const n=document.querySelector(".nav__game");console.log("game nav item ",n),n.classList.remove("nav__item_hidden")}},getBestPlayers(e,o){const r=t.model.db.transaction(["players"],"readonly").objectStore("players").index("score_idx");let s=0;const l=r.openCursor(IDBKeyRange.lowerBound(0),"prev"),i=[];l.onsuccess=function(e){const t=e.target.result;t&&s<10?(i.push(t.value),s++,t.continue()):document.getElementById("#page").innerHTML=n.view.render(a.templates.scores,i)}}}},795:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.router=void 0;const n=o(99);function a(){const e=(""===window.location.hash.slice(1)&&(window.location.hash="#about"),window.location.hash.slice(1)),t=`${e}Route`;!function(e){document.querySelectorAll(".nav__item").forEach((e=>{e.classList.contains("nav__item_active")&&e.classList.remove("nav__item_active")}));const t=`.nav__${e}`;document.querySelector(t).classList.add("nav__item_active")}(e),n.controller[t]()}t.router={changePageByHash(){window.addEventListener("hashchange",a),a()}}},75:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.templates=void 0,t.templates={about:'\n  <div class="about">\n    <h2 class="heading">How to play</h2>\n    <ul class="steps">\n      <li class="step__item">1 step: You should <span class="login">Log in</span> to play match-match game</li>\n      <li class="step__item">2 step: You can set up game difficulty and card themes if you want</li>\n      <li class="step__item">3 step: Start game!</li>\n      <li class="step__item">4 step: You can see the best results</li>\n    </ul>\n    <h2 class="heading">What is match-match game</h2>\n    <p>Match game is a game that require player to match similar elements. Participant need to find a match for a card.\n      You have 16 or more pictured cards; composed of 8 pairs, face down in random order. </p>\n  </div>\n  ',header:'\n  <div class="container">\n  <nav class="nav">\n    <a href="#about" class="nav__item nav__about">About game</a>\n    <a href="#form" class="nav__item nav__form">Log in</a>\n    <a href="#settings" class="nav__item nav__settings">Settings</a>\n    <a href="#game" class="nav__item nav__item_hidden nav__game">Play game</a>\n    <a href="#scores" class="nav__item nav__scores">Best players</a>\n  </nav>\n  <div class="loggedGamer">\n    <div class="loggedGamer__data"><p>Log in, please</p></div>\n  </div>\n  <main id=\'#page\'></main>\n  </div>\n',form:'\n  <form class="logForm">\n    <div class="wrapper">\n      <input type="text" id="fname" placeholder="First name">\n      <div class="ok_fname ok"></div>\n      <div class="err_fname err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <div class="wrapper">\n      <input type="text" id="lname" placeholder="Last name">\n      <div class="ok_lname ok"></div>\n      <div class="err_lname err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <div class="wrapper">\n      <input type="email" id="email" placeholder="Email">\n      <div class="ok_email ok"></div>\n      <div class="err_email err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <input type="text" id="score" placeholder="Score">\n    <div class="wrapper">\n      <button id="cleanButton">Clean</button>\n      <button id="addButton" type="submit">Log in</button>\n    </div>\n  </form>\n',settings:'\n  <div class="gameSettings">\n   <p class="select selectHeading">Game difficulty</p>\n   <select>\n    <option value="12">16 cards</option>\n    <option value="20">36 cards</option>\n    <option value="30">64 cards</option>\n   </select>\n   <p class="select selectTheme">Card theme</p>\n   <select>\n    <option value="underwater">Underwater</option>\n    <option value="butterflies">Butterflies</option>\n   </select>\n   </div>\n  ',game:"",scores:'<div class="player"><div class="left-col"><p class="player__name">{fname} {lname}</p><p class="player__email">{email}</p></div><div class="right-col"><p class="player__score">Score: <span>{score}</span></p></div></div>'}},484:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.form=void 0,t.form={getDataFromForm(){console.log("form.getDataFromForm()");const e=document.querySelectorAll(".logForm input"),t={};return console.log(e),e.forEach((e=>{t[e.id]=e.value})),t},validError(e,t){const o=`.ok_${e}`;document.querySelector(o).style.display="none";const n=`.err_${e}`;document.querySelector(n).style.display="block";const a=`${n} .err_message`;document.querySelector(a).innerHTML=t,document.getElementById("addButton").classList.remove("addButton_active")},validSuccess(e){console.log("success input");const o=`.ok_${e}`;document.querySelector(o).style.display="block";const n=`.err_${e}`;document.querySelector(n).style.display="none",t.form.validateForm()&&document.getElementById("addButton").classList.add("addButton_active")},validateInput(e){console.log("generated by addEventListener in controller.js formRoute()");const o=e.target.getAttribute("type"),n=e.target.value;let a=!1;""===n?(console.log("val",n),a=!0,t.form.validError(e.target.id,"Error: at least one simbol required!")):!1===/^([a-zA-Z0-9]+)$/.test(n)&&"text"===o?(a=!0,t.form.validError(e.target.id,"Error: just letters and numbers allowed!")):!1===/[a-zA-Z]+/.test(n)&&"text"===o?(a=!0,t.form.validError(e.target.id,"Error: field can't consist of numbers only!")):!1===/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(n)&&"email"===o&&(a=!0,t.form.validError(e.target.id,"Error: mail should be correct!")),console.log("isError ",a),!1===a&&t.form.validSuccess(e.target.id)},validateForm(){console.log("generated by addEventListener in controller.js formRoute()");const e=document.querySelectorAll(".ok");let t=!0;return e.forEach((e=>{"none"!==e.style.display&&""!==e.style.display||(console.log("into false",e),t=!1)})),!1!==t},cleanForm(){console.log("generated by addEventListener in controller.js formRoute()"),document.querySelectorAll(".logForm .wrapper input").forEach((e=>{e.value="";const t=`.ok_${e.id}`;document.querySelector(t).style.display="none";const o=`.err_${e.id}`;document.querySelector(o).style.display="none"})),document.getElementById("addButton").classList.remove("addButton_active")}}},764:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.view=void 0;const n=o(75);t.view={render:(e,t)=>void 0===t?e:t.map((e=>{let t=n.templates.scores;return Object.keys(e).forEach((o=>{const n=`{${o}}`;t=t.replace(n,e[o])})),t})).join("")}}},t={};function o(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,o),r.exports}o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{o(698);const e=o(84),t=o(75),n=o(764),a=o(795);document.body.innerHTML=n.view.render(t.templates.header),function(){if(!e.model.indexedDBOk)return console.log("window.indexedDB - false"),!1;const t=indexedDB.open("oleksawn",1);t.onupgradeneeded=function(e){const t=e.target.result;t.objectStoreNames.contains("players")||t.createObjectStore("players",{autoIncrement:!0}).createIndex("score_idx","score",{unique:!1})},t.onsuccess=function(t){console.log("running DB onsuccess"),e.model.db=t.target.result,a.router.changePageByHash()},t.onerror=function(e){console.log("running DB onerror")}}()})()})();