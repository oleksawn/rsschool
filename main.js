(()=>{"use strict";const e='\n  <div class="about">\n    <h2 class="heading">How to play</h2>\n    <ul class="steps">\n      <li class="step__item">1 step: You should <span class="login">Log in</span> to play match-match game</li>\n      <li class="step__item">2 step: You can set up game difficulty and card themes if you want</li>\n      <li class="step__item">3 step: Start game!</li>\n      <li class="step__item">4 step: You can see the best results</li>\n    </ul>\n    <h2 class="heading">What is match-match game</h2>\n    <p>Match game is a game that require player to match similar elements. Participant need to find a match for a card.\n      You have 16 or more pictured cards; composed of 8 pairs, face down in random order. </p>\n  </div>\n  ',t='\n  <div class="container">\n  <nav class="nav">\n    <a href="#about" class="nav__item nav__about">About game</a>\n    <a href="#form" class="nav__item nav__form">Log in</a>\n    <a href="#settings" class="nav__item nav__settings">Settings</a>\n    <a href="#game" class="nav__item nav__item_hidden nav__game">Play game</a>\n    <a href="#scores" class="nav__item nav__scores">Best players</a>\n  </nav>\n  <div class="loggedGamer">\n    <div class="loggedGamer__data"><p>Log in, please</p></div>\n  </div>\n  <main id=\'#page\'></main>\n  </div>\n',n='\n  <form class="logForm">\n    <div class="wrapper">\n      <input type="text" id="fname" placeholder="First name">\n      <div class="ok_fname ok"></div>\n      <div class="err_fname err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <div class="wrapper">\n      <input type="text" id="lname" placeholder="Last name">\n      <div class="ok_lname ok"></div>\n      <div class="err_lname err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <div class="wrapper">\n      <input type="email" id="email" placeholder="Email">\n      <div class="ok_email ok"></div>\n      <div class="err_email err"><div class="angle"></div><p class="err_message"></p></div>\n    </div>\n    <input type="text" id="score" placeholder="Score">\n    <div class="wrapper">\n      <button id="cleanButton">Clean</button>\n      <button id="addButton" type="submit">Log in</button>\n    </div>\n  </form>\n',a='\n  <div class="gameSettings">\n   <p class="select selectHeading">Game difficulty</p>\n   <select id="select-difficulty">\n    <option value="16">16 cards</option>\n    <option value="36">36 cards</option>\n    <option value="64">64 cards</option>\n   </select>\n   <p class="select selectTheme">Card theme</p>\n   <select id="select-theme">\n    <option value="underwater">Underwater</option>\n    <option value="butterflies">Butterflies</option>\n   </select>\n   </div>\n  ',o='\n  <div class="game-wrapper">\n    <div class="game-buttons">\n      <button class="start btn">Start game</button>\n      <p class="timer show">00:00</p>\n      <button class="stop btn">Stop</button>\n      <p class="score show">Score</p>\n    </div>\n    <div class="game-field">\n      <div class="game-cards game-cards_16"></div>\n    </div>\n  </div>\n  ',s='\n  <div class="card-container">\n    <div class="card">\n      <div class="card__front"></div>\n      <div class="card__back"></div>\n    </div>\n  </div>\n  ',r='<div class="player"><div class="left-col"><p class="player__name">{fname} {lname}</p><p class="player__email">{email}</p></div><div class="right-col"><p class="player__score">Score: <span>{score}</span></p></div></div>',l={render:(e,t)=>void 0===t?e:t.map((e=>{let t=r;return Object.keys(e).forEach((n=>{const a=`{${n}}`;t=t.replace(a,e[n])})),t})).join("")},c={isLogged:!1,loggedGamer:{},settings:{theme:"underwater",difficulty:16},indexedDBOk:()=>"indexedDB"in window,settingsObj:{difficulty:16,theme:"underwater"},db:{},addPlayerintoDb(e){console.log("model.addPlayerIntoDb()"),c.addPerson(e)},addPerson(e){const t=c.db.transaction(["players"],"readwrite").objectStore("players").add(e);t.onerror=function(e){console.log("Error",e.target.error.name)},t.onsuccess=function(t){console.log("Wow! Did it"),c.isLogged=!0,c.loggedGamer=e,document.querySelector(".loggedGamer__data").innerHTML=`<p class="name">${e.fname} ${e.lname}</p><p class="email">${e.email}</p>`;const n=document.querySelector(".nav__game");console.log("game nav item ",n),n.classList.remove("nav__item_hidden")}},getBestPlayers(e,t){const n=c.db.transaction(["players"],"readonly").objectStore("players").index("score_idx");let a=0;const o=n.openCursor(IDBKeyRange.lowerBound(0),"prev"),s=[];o.onsuccess=function(e){const t=e.target.result;t&&a<10?(s.push(t.value),a++,t.continue()):document.getElementById("#page").innerHTML=l.render(r,s)}}},i={getDataFromForm(){console.log("form.getDataFromForm()");const e=document.querySelectorAll(".logForm input"),t={};return console.log(e),e.forEach((e=>{t[e.id]=e.value})),t},validError(e,t){const n=`.ok_${e}`;document.querySelector(n).style.display="none";const a=`.err_${e}`;document.querySelector(a).style.display="block";const o=`${a} .err_message`;document.querySelector(o).innerHTML=t,document.getElementById("addButton").classList.remove("addButton_active")},validSuccess(e){console.log("success input");const t=`.ok_${e}`;document.querySelector(t).style.display="block";const n=`.err_${e}`;document.querySelector(n).style.display="none",i.validateForm()&&document.getElementById("addButton").classList.add("addButton_active")},validateInput(e){console.log("generated by addEventListener in controller.js formRoute()");const t=e.target.getAttribute("type"),n=e.target.value;let a=!1;""===n?(console.log("val",n),a=!0,i.validError(e.target.id,"Error: at least one simbol required!")):!1===/^([a-zA-Z0-9]+)$/.test(n)&&"text"===t?(a=!0,i.validError(e.target.id,"Error: just letters and numbers allowed!")):!1===/[a-zA-Z]+/.test(n)&&"text"===t?(a=!0,i.validError(e.target.id,"Error: field can't consist of numbers only!")):!1===/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(n)&&"email"===t&&(a=!0,i.validError(e.target.id,"Error: mail should be correct!")),console.log("isError ",a),!1===a&&i.validSuccess(e.target.id)},validateForm(){console.log("generated by addEventListener in controller.js formRoute()");const e=document.querySelectorAll(".ok");let t=!0;return e.forEach((e=>{"none"!==e.style.display&&""!==e.style.display||(console.log("into false",e),t=!1)})),!1!==t},cleanForm(){console.log("generated by addEventListener in controller.js formRoute()"),document.querySelectorAll(".logForm .wrapper input").forEach((e=>{e.value="";const t=`.ok_${e.id}`;document.querySelector(t).style.display="none";const n=`.err_${e.id}`;document.querySelector(n).style.display="none"})),document.getElementById("addButton").classList.remove("addButton_active")}},d={aboutRoute(){console.log("about route"),document.getElementById("#page").innerHTML=l.render(e)},formRoute(){console.log("form route"),document.getElementById("#page").innerHTML=l.render(n);const e=document.querySelectorAll(".logForm .wrapper input");console.log("inputs",e),e.forEach((e=>{console.log("add event listener",e),e.addEventListener("input",i.validateInput)})),document.querySelector("#addButton").addEventListener("click",(()=>{if(console.log("router.formRoute() addbutton.onclick"),i.validateForm()){const e=i.getDataFromForm();c.addPlayerintoDb(e)}})),document.querySelector("#cleanButton").addEventListener("click",i.cleanForm)},settingsRoute(){console.log("settings route"),document.getElementById("#page").innerHTML=l.render(a);const e=document.querySelector("#select-difficulty"),t=document.querySelector("#select-theme");e.addEventListener("change",(e=>{c.settings.difficulty=e.target.value})),t.addEventListener("change",(e=>{c.settings.theme=e.target.value}))},gameRoute(){console.log("game route"),document.getElementById("#page").innerHTML=l.render(o);const e=document.querySelector(".game-cards");e.classList.remove("game-cards_16","game-cards_32","game-cards_64");const t=`game-cards_${c.settings.difficulty}`;e.classList.add(t);for(let t=0;t<c.settings.difficulty;t++)e.innerHTML+=l.render(s);e.addEventListener("click",(e=>{e.target.classList.contains("card__back")&&(console.log("Click on card back",e.target,e.target.parentElement),e.target.parentElement.classList.add("flipped"))}))},scoresRoute(){console.log("scores route"),c.getBestPlayers(10,c.settings.difficulty)}};function u(){const e=(""===window.location.hash.slice(1)&&(window.location.hash="#about"),window.location.hash.slice(1)),t=`${e}Route`;!function(e){document.querySelectorAll(".nav__item").forEach((e=>{e.classList.contains("nav__item_active")&&e.classList.remove("nav__item_active")}));const t=`.nav__${e}`;document.querySelector(t).classList.add("nav__item_active")}(e),d[t]()}const m={changePageByHash(){window.addEventListener("hashchange",u),u()}};document.body.innerHTML=l.render(t),function(){if(!c.indexedDBOk)return console.log("window.indexedDB - false"),!1;const e=indexedDB.open("oleksawn",1);e.onupgradeneeded=function(e){const t=e.target.result;t.objectStoreNames.contains("players")||t.createObjectStore("players",{autoIncrement:!0}).createIndex("score_idx","score",{unique:!1})},e.onsuccess=function(e){console.log("running DB onsuccess"),c.db=e.target.result,m.changePageByHash()},e.onerror=function(e){console.log("running DB onerror")}}()})();