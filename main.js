(()=>{"use strict";const e='\n  <div class="about">\n    <h2 class="about__heading">How to play?</h2>\n    <div class="section about__reg">\n      <div class="info">\n        <div class="number">1</div>\n        <p class="text">Register new player in game</p>\n      </div>\n      <div class="example"></div>\n    </div>\n    <div class="section about__set">\n      <div class="info">\n        <div class="number">2</div>\n        <p class="text">Configure your game settings</p>\n      </div>\n      <div class="example"></div>\n    </div>\n    <div class="section about__game">\n      <div class="info">\n        <div class="number">3</div>\n        <p class="text">Start your new game1 Remember card positions and match it before times up.</p>\n      </div>\n      <div class="example"></div>\n    </div>\n  </div>\n  ',n='\n  <div class="header">\n    <div class="header-container">\n      <div class="logo">\n        <p class="logo_up">match</p>\n        <p class="logo_down">match</p>\n      </div>\n      <nav class="nav">\n        <a href="#about" class="nav__item nav__about"><div class="nav__icon nav__icon_about"></div><p>About Game</p></a>\n        <a href="#scores" class="nav__item nav__scores"><div class="nav__icon nav__icon_scores"></div><p>Best Players</p></a>\n        <a href="#settings" class="nav__item nav__settings"><div class="nav__icon nav__icon_settings"></div><p>Game Settings</p></a>\n      </nav>\n      <div class="header-buttons">\n        <a href="#game" class="header__btn hidden header__btn_game">Game</a>\n        <button class="header__btn header__btn_form">Register New Player</button>\n        <div class="loggedGamer">\n          <div class="loggedGamer__data"><p>Log in, please</p></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <main id=\'#page\'></main>\n',t='\n  <div class="form-container">\n  <form class="logForm">\n    <a href="#about" class="close-btn"></a>\n    <h2 class="form-heading">Registr new player</h2>\n    <div class="inputs-container">\n      <div class="wrapper">\n        <input type="text" id="fname" placeholder="First name">\n        <div class="ok_fname ok"></div>\n        <div class="err_fname err"><div class="angle"></div><p class="err_message"></p></div>\n      </div>\n      <div class="wrapper">\n        <input type="text" id="lname" placeholder="Last name">\n        <div class="ok_lname ok"></div>\n        <div class="err_lname err"><div class="angle"></div><p class="err_message"></p></div>\n      </div>\n      <div class="wrapper">\n        <input type="email" id="email" placeholder="Email">\n        <div class="ok_email ok"></div>\n        <div class="err_email err"><div class="angle"></div><p class="err_message"></p></div>\n      </div>\n      <div class="wrapper">\n        <button id="cleanButton">Clean</button>\n        <a href="#about" id="addButton" type="submit">Add user</a>\n      </div>\n    </div>\n  </form>\n  </div>\n',o='\n  <div class="gameSettings">\n    <p class="select selectHeading">Game difficulty</p>\n    <select class="select" id="select-difficulty">\n      <option value="16">16 cards</option>\n      <option value="36">36 cards</option>\n      <option value="64">64 cards</option>\n    </select>\n    <p class="select selectTheme">Card theme</p>\n    <select class="select" id="select-theme">\n      <option value="underwater">Underwater</option>\n      <option value="butterflies">Butterflies</option>\n    </select>\n  </div>\n  ',s='\n  <div class="game-wrapper">\n    <div class="game-buttons">\n      <button class="game-btn game-btn_start"></button>\n      <button class="game-btn game-btn_stop hidden"></button>\n      <p class="timer show"><span class="timer-min">00</span>:<span class="timer-sec">00</span></p>\n      <p class="score show">Score</p>\n    </div>\n    <div class="game-cards game-cards_16"></div>\n  </div>\n  ',a='\n  <div class="card-container">\n    <div class="card">\n      <div class="card__front"></div>\n      <div class="card__back"></div>\n    </div>\n  </div>\n  ',r='\n    <div class="congrat-wrapper">\n    <div class="congrat">\n      <p class="congrat-message">Congratulations!</p>\n      <a class="congrat__scores-btn" href="#scores">Go to Best Players</a>\n    </div>\n    </div>\n  ',l='<div class="player"><div class="left-col"><p class="player__name">{fname} {lname}</p><p class="player__email">{email}</p></div><div class="right-col"><p class="player__score">Score: <span class="player__score-num">{score}</span></p></div></div>',c={render:(e,n)=>0===n.length?/\{/.test(e)?"":e:n.map((e=>{let n=l;return Object.keys(e).forEach((t=>{const o=`{${String(t)}}`;n=n.replace(o,e[t])})),n})).join("")},i={isLogged:!1,loggedGamer:{fname:"",lname:"",email:"",score:"0"},settings:{theme:"underwater",difficulty:16},db:{},indexedDBOk:()=>"indexedDB"in window,addPlayerintoDb(e){console.log("model.addPlayerIntoDb()"),i.addPerson(e)},addPerson(e){const n=i.db.transaction(["players"],"readwrite").objectStore("players").add(e);n.onerror=function(){console.log("Error adding into DB")},n.onsuccess=function(){console.log("score success added into DB")}},getBestPlayers(e,n){const t=i.db.transaction(["players"],"readonly").objectStore("players").index("score_idx");let o=0;const s=t.openCursor(IDBKeyRange.lowerBound(0),"prev"),a=[];s.onsuccess=function(e){const n=e.target.result;console.log("success db get",n),n&&o<10?(a.push(n.value),o++,console.log("### Data from DB + count",a,o),n.continue()):document.getElementById("#page").innerHTML=`<div class="scores-container">${c.render(l,a)}</div>`}}},d={getDataFromForm(){console.log("form.getDataFromForm()");const e=document.querySelectorAll(".logForm input"),n={};return console.log(e),e.forEach((e=>{n[e.id]=e.value})),n},validError(e,n){const t=`.ok_${e}`;document.querySelector(t).style.display="none";const o=`.err_${e}`;document.querySelector(o).style.display="block";const s=`${o} .err_message`;document.querySelector(s).innerHTML=n,document.getElementById("addButton").classList.remove("addButton_active")},validSuccess(e){console.log("success input");const n=`.ok_${e}`;document.querySelector(n).style.display="block";const t=`.err_${e}`;document.querySelector(t).style.display="none",d.validateForm()&&document.getElementById("addButton").classList.add("addButton_active")},validateInput(e){console.log("generated by addEventListener in controller.js formRoute()");const n=e.target.getAttribute("type"),t=e.target.value;let o=!1;""===t?(console.log("val",t),o=!0,d.validError(e.target.id,"Error: at least one simbol required!")):!1===/^([a-zA-Z0-9]+)$/.test(t)&&"text"===n?(o=!0,d.validError(e.target.id,"Error: just letters and numbers allowed!")):!1===/[a-zA-Z]+/.test(t)&&"text"===n?(o=!0,d.validError(e.target.id,"Error: field can't consist of numbers only!")):!1===/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(t)&&"email"===n?(o=!0,d.validError(e.target.id,"Error: mail should be correct!")):t.length>30&&(o=!0,d.validError(e.target.id,"Error: maximum 30 symbols allowed!")),console.log("isError ",o),!1===o&&d.validSuccess(e.target.id)},validateForm(){console.log("generated by addEventListener in controller.js formRoute()");const e=document.querySelectorAll(".ok");let n=!0;return e.forEach((e=>{"none"!==e.style.display&&""!==e.style.display||(console.log("into false",e),n=!1)})),!0===n},cleanForm(){console.log("generated by addEventListener in controller.js formRoute()"),document.querySelectorAll(".logForm .wrapper input").forEach((e=>{e.value="";const n=`.ok_${e.id}`;document.querySelector(n).style.display="none";const t=`.err_${e.id}`;document.querySelector(t).style.display="none"})),document.getElementById("addButton").classList.remove("addButton_active")}},g={aboutRoute(){console.log("about route"),document.getElementById("#page").innerHTML=c.render(e,[])},aboutrRoute(){console.log("form popup");const n=document.getElementById("#page");n.innerHTML=c.render(e,[]),n.innerHTML+=c.render(t,[]);const o=document.querySelectorAll(".logForm .wrapper input");console.log("inputs",o),o.forEach((e=>{console.log("add event listener",e),e.addEventListener("input",d.validateInput)})),document.querySelector("#addButton").addEventListener("click",(()=>{if(console.log("router.formRoute() addbutton.onclick"),d.validateForm()){console.log("form is valid");const e=d.getDataFromForm();Object.keys(e).forEach((n=>{i.loggedGamer[n]=e[n]})),i.isLogged=!0,console.log("loggedGamer after add user button on form = ",i.loggedGamer),document.querySelector(".loggedGamer__data").innerHTML=`<p class="name">${i.loggedGamer.fname} ${i.loggedGamer.lname}</p><p class="email">${i.loggedGamer.email}</p>`;const n=document.querySelector(".header__btn_game");console.log("show new game button in header",n),n.classList.remove("hidden")}})),document.querySelector("#cleanButton").addEventListener("click",d.cleanForm)},settingsRoute(){console.log("settings route"),document.getElementById("#page").innerHTML=c.render(o,[]);const e=document.querySelector("#select-difficulty"),n=document.querySelector("#select-theme");e.value=String(i.settings.difficulty),n.value=i.settings.theme,e.addEventListener("change",(e=>{i.settings.difficulty=Number(e.target.value)})),n.addEventListener("change",(e=>{i.settings.theme=e.target.value}))},gameRoute(){console.log("game route"),document.getElementById("#page").innerHTML=c.render(s,[]);const e=document.querySelector(".game-cards");e.classList.remove("game-cards_16","game-cards_32","game-cards_64");const n=`game-cards_${i.settings.difficulty}`;e.classList.add(n);for(let n=0;n<i.settings.difficulty;n++)e.innerHTML+=c.render(a,[]);const t=document.querySelectorAll(".card__front"),o=[];for(let e=0;e<i.settings.difficulty;e++)o.push(e+1);o.sort((function(){return Math.random()-.5})),console.log("sorted num arr",o);const l=[];for(let e=0;e<o.length;e++)o[e]<=i.settings.difficulty/2?l[e]=o[e]:l[e]=o[e]-i.settings.difficulty/2;console.log("sorted num arr",l);let d=0;t.forEach((e=>{e.style.backgroundImage=`url('./assets/${i.settings.theme}/${l[d]}.png')`,console.log(e.style.backgroundImage),d++}));const u=document.querySelector(".game-buttons .game-btn_start"),m=document.querySelector(".game-buttons .game-btn_stop"),v=document.querySelector(".timer-min"),p=document.querySelector(".timer-sec");let _,y,f,b=0,h=0;u.addEventListener("click",(()=>{console.log("start game!!!",u,m),u.classList.add("hidden"),m.classList.remove("hidden");const n=document.querySelectorAll(".game-cards .card");n.forEach((e=>{e.classList.add("flipped")})),console.log("Flipped cards?",n),setTimeout((()=>{console.log("After setTimeout"),n.forEach((e=>{e.classList.remove("flipped")}));let t=0;const o=setInterval((()=>{window.addEventListener("hashchange",(()=>{clearInterval(o)})),t++,console.log(t),p.innerHTML=1===String(t%60).length?`0${String(t%60)}`:String(t%60),v.innerHTML=1===String(Math.floor(t/60)).length?`0${String(Math.floor(t/60))}`:String(Math.floor(t/60))}),1e3);m.addEventListener("click",(()=>{m.classList.add("hidden"),u.classList.remove("hidden"),clearInterval(o),g.gameRoute()})),e.addEventListener("click",(n=>{if(console.log("click on cards field => on card__back"),n.target.classList.contains("card__back"))if(n.target.parentElement.classList.add("flipped"),b++,b%2==1){_=n.target,console.log("Test = ",_.previousElementSibling.style.backgroundImage);const e=Number(/[0-9]+/.exec(_.previousElementSibling.style.backgroundImage));console.log("res odd",e),y=e}else{const s=Number(/[0-9]+/.exec(n.target.previousElementSibling.style.backgroundImage));if(console.log("res even",s),f=s,f===y){if(h++,_.previousElementSibling.style.backgroundColor="rgb(142, 202, 142)",n.target.previousElementSibling.style.backgroundColor="rgb(142, 202, 142)",h===i.settings.difficulty/2){clearInterval(o);const n=document.querySelector(".game-buttons .score"),s=100*(b/2-(b/2-h))-10*t;if(console.log("Score = ",s,"clicks = ",b,"same = ",h,"sec = ",t),n.innerHTML=`Score: ${s>0?s:0}`,e.innerHTML+=c.render(r,[]),i.isLogged){i.loggedGamer.score=s>0?String(s):"0",console.log("loggedGamer after congratulations");const e={fname:"",lname:"",email:"",score:0};e.fname=i.loggedGamer.fname,e.lname=i.loggedGamer.lname,e.email=i.loggedGamer.email,e.score=Number(i.loggedGamer.score),i.addPlayerintoDb(e)}}}else console.log("not same"),_.previousElementSibling.style.backgroundColor="rgb(219, 138, 158)",n.target.previousElementSibling.style.backgroundColor="rgb(219, 138, 158)",setTimeout(((e,n)=>{console.log(e),console.log(n),e.parentElement.classList.remove("flipped"),n.parentElement.classList.remove("flipped"),e.previousElementSibling.style.backgroundColor="",n.previousElementSibling.style.backgroundColor=""}),800,_,n.target)}}))}),1e4)}))},scoresRoute(){console.log("scores route"),i.getBestPlayers(10,i.settings.difficulty)}};function u(){const e=window.location.hash.slice(1),n=`${e}Route`;!function(e){document.querySelectorAll(".nav__item").forEach((e=>{e.classList.contains("nav__item_active")&&e.classList.remove("nav__item_active")}));const n=`.nav__${e}`,t=document.querySelector(n);null!=t&&t.classList.add("nav__item_active")}(e),g[n]()}const m={changePageByHash(){document.body.innerHTML=c.render(n,[]),window.addEventListener("hashchange",u),document.querySelector(".header__btn_form").addEventListener("click",(()=>{window.location.hash="#aboutr"})),""===window.location.hash.slice(1)&&(window.location.hash="#about")}};!function(){if(!i.indexedDBOk)return console.log("window.indexedDB - false"),!1;const e=indexedDB.open("oleksawn",1);e.onupgradeneeded=function(e){const n=e.target.result;n.objectStoreNames.contains("players")||n.createObjectStore("players",{autoIncrement:!0}).createIndex("score_idx","score",{unique:!1})},e.onsuccess=function(e){console.log("running DB onsuccess"),i.db=e.target.result,m.changePageByHash()},e.onerror=function(e){console.log("running DB onerror")}}()})();